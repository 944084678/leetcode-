title：
   Given an array of integers, return indices of the two numbers such that they add up to a specific target.
   You may assume that each input would have exactly one solution, and you may not use the same element twice.
example：
   Given nums = [2, 7, 11, 15], target = 9,
   Because nums[0] + nums[1] = 2 + 7 = 9,
   return [0, 1].
   
题目：
  给定一组数，然后给一个特定的数，从数组中找到两个数，这两个数之和是这个给定的数。
  你可以认为每个输入只对应一个解决方案，同时，数组中的每个元素只能使用一次。
示例：
  给数组 nums={2，7，11，15}，target=9，
  因为nums[0] + nums[1] = 2 + 7 = 9,
  所以返回[0, 1]。
  
解决方案：

#include<iostream>
using namespace std;
int main()
{
	cout << "请问你要输入几个数：";
	int num;
	cin >> num;
	int *p = new int[num];
	cout << "请依次输入你要输入的数据：";
	for (int i = 0; i < num; i++)
	{
		cin >> p[i];
	}
	cout << "请输入你要求的数：";
	int target;
	cin >> target;
	for (int i = 0; i < num; i++)
	{
		for (int j = i + 1; j < num; j++)
		{
			if (p[i] + p[j] == target)
			{
				cout << "这两个数的下标是:" << i << "和" << j << endl;
			}
		}
	}
	system("pause");
}
